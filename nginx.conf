events {}

http {
    server {
        listen 8080;
        server_name reflect.archf5.com reflector.archf5.com;

        # location /capture-headers {
        #     add_header Content-Type "text/plain";
        #     return 200 "Request Headers:\n\n$host$request_uri\n\n$http_*";
        #     proxy_buffering off;
        #     # These two should be the same or nginx will start writing 
        #     # large request bodies to temp files 
        #     client_body_buffer_size 10m; 
        #     client_max_body_size 10m;
        # }
        location /capture-headers {
            content_by_lua_block {
                response = ngx.location.capture("/capture-headers")
                for headerName, header in pairs(response.header) do
                    ngx.header[headerName] = header
                end
                ngx.status = response.status
                ngx.say(response.body)
                ngx.exit(response.status)
            }            
        }
    }
}

